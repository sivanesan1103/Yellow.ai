version: '3.8'

services:
  # Backend Server - Production Configuration
  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: yellowai-server-prod
    restart: always
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: ${MONGODB_URI}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      CLIENT_URL: ${CLIENT_URL:-https://yourdomain.com}
      SERVER_URL: ${SERVER_URL:-https://api.yourdomain.com}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - yellowai-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          memory: 256M

  # Frontend Client - Production Configuration  
  client:
    build: 
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_SERVER_URL: ${SERVER_URL:-https://api.yourdomain.com}
    container_name: yellowai-client-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
    networks:
      - yellowai-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          memory: 128M

  # Redis for Session Storage - Production
  redis:
    image: redis:7-alpine
    container_name: yellowai-redis-prod
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-yellowai2024}
    ports:
      - "6379:6379"
    volumes:
      - redis_prod_data:/data
    networks:
      - yellowai-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Nginx Reverse Proxy (Optional for production)
  nginx:
    image: nginx:alpine
    container_name: yellowai-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - client
      - server
    networks:
      - yellowai-network

volumes:
  redis_prod_data:
    driver: local

networks:
  yellowai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16