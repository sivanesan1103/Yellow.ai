version: '3.8'

services:
  # Backend Server
  server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: yellowai-server
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: ${MONGODB_URI}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      CLIENT_URL: http://localhost
      SERVER_URL: http://localhost:3000
      ALLOWED_ORIGINS: http://localhost,http://localhost:3000,http://localhost:5173
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - yellowai-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Client
  client:
    build: 
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_SERVER_URL: http://localhost:3000
    container_name: yellowai-client
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      server:
        condition: service_healthy
    networks:
      - yellowai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for Session Storage (Optional)
  redis:
    image: redis:7-alpine
    container_name: yellowai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - yellowai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  yellowai-network:
    driver: bridge